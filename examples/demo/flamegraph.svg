<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="582" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="565.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="565.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;f32 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (6 samples, 0.33%)</title><rect x="10" y="485" width="3" height="15" fill="rgb(210,183,19)"/><text text-anchor="left" x="13.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[anon] (7 samples, 0.39%)</title><rect x="10" y="501" width="4" height="15" fill="rgb(215,28,23)"/><text text-anchor="left" x="13.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::main_tl (1 samples, 0.06%)</title><rect x="13" y="485" width="1" height="15" fill="rgb(227,79,41)"/><text text-anchor="left" x="16.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (4 samples, 0.22%)</title><rect x="14" y="501" width="3" height="15" fill="rgb(247,146,42)"/><text text-anchor="left" x="17.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>demo::main (4 samples, 0.22%)</title><rect x="14" y="485" width="3" height="15" fill="rgb(212,229,4)"/><text text-anchor="left" x="17.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::Rng::gen (4 samples, 0.22%)</title><rect x="14" y="469" width="3" height="15" fill="rgb(246,130,0)"/><text text-anchor="left" x="17.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.22%)</title><rect x="14" y="453" width="3" height="15" fill="rgb(232,81,36)"/><text text-anchor="left" x="17.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::Rng::gen (3 samples, 0.17%)</title><rect x="15" y="437" width="2" height="15" fill="rgb(206,84,2)"/><text text-anchor="left" x="18.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.17%)</title><rect x="15" y="421" width="2" height="15" fill="rgb(221,211,17)"/><text text-anchor="left" x="18.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (3 samples, 0.17%)</title><rect x="15" y="405" width="2" height="15" fill="rgb(232,87,25)"/><text text-anchor="left" x="18.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.17%)</title><rect x="15" y="389" width="2" height="15" fill="rgb(211,215,27)"/><text text-anchor="left" x="18.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.17%)</title><rect x="15" y="373" width="2" height="15" fill="rgb(225,229,16)"/><text text-anchor="left" x="18.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3 samples, 0.17%)</title><rect x="15" y="357" width="2" height="15" fill="rgb(243,99,17)"/><text text-anchor="left" x="18.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.17%)</title><rect x="15" y="341" width="2" height="15" fill="rgb(253,14,20)"/><text text-anchor="left" x="18.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.06%)</title><rect x="16" y="325" width="1" height="15" fill="rgb(223,92,20)"/><text text-anchor="left" x="19.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::ChaCha::refill4 (1 samples, 0.06%)</title><rect x="16" y="309" width="1" height="15" fill="rgb(232,158,20)"/><text text-anchor="left" x="19.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (9 samples, 0.50%)</title><rect x="106" y="325" width="6" height="15" fill="rgb(221,45,3)"/><text text-anchor="left" x="109.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9 samples, 0.50%)</title><rect x="106" y="309" width="6" height="15" fill="rgb(209,40,30)"/><text text-anchor="left" x="109.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (9 samples, 0.50%)</title><rect x="106" y="293" width="6" height="15" fill="rgb(243,208,29)"/><text text-anchor="left" x="109.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::from_elem (11 samples, 0.61%)</title><rect x="112" y="325" width="7" height="15" fill="rgb(250,29,40)"/><text text-anchor="left" x="115.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;T as alloc::vec::SpecFromElem&gt;::from_elem (11 samples, 0.61%)</title><rect x="112" y="309" width="7" height="15" fill="rgb(207,113,3)"/><text text-anchor="left" x="115.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::extend_with (11 samples, 0.61%)</title><rect x="112" y="293" width="7" height="15" fill="rgb(225,119,11)"/><text text-anchor="left" x="115.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::write (11 samples, 0.61%)</title><rect x="112" y="277" width="7" height="15" fill="rgb(224,226,18)"/><text text-anchor="left" x="115.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::real_drop_in_place (3 samples, 0.17%)</title><rect x="119" y="325" width="2" height="15" fill="rgb(241,19,52)"/><text text-anchor="left" x="122.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::real_drop_in_place (3 samples, 0.17%)</title><rect x="119" y="309" width="2" height="15" fill="rgb(229,33,11)"/><text text-anchor="left" x="122.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.17%)</title><rect x="119" y="293" width="2" height="15" fill="rgb(225,194,35)"/><text text-anchor="left" x="122.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (3 samples, 0.17%)</title><rect x="119" y="277" width="2" height="15" fill="rgb(226,58,45)"/><text text-anchor="left" x="122.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (3 samples, 0.17%)</title><rect x="119" y="261" width="2" height="15" fill="rgb(234,123,47)"/><text text-anchor="left" x="122.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::alloc::dealloc (3 samples, 0.17%)</title><rect x="119" y="245" width="2" height="15" fill="rgb(207,201,45)"/><text text-anchor="left" x="122.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI_munmap (3 samples, 0.17%)</title><rect x="119" y="229" width="2" height="15" fill="rgb(208,189,29)"/><text text-anchor="left" x="122.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="121" y="245" width="1" height="15" fill="rgb(223,1,25)"/><text text-anchor="left" x="124.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::nth (1 samples, 0.06%)</title><rect x="121" y="229" width="1" height="15" fill="rgb(243,199,35)"/><text text-anchor="left" x="124.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::inner_kernel::_$u7b$$u7b$closure$u7d$$u7d$::h2af3b1d1c63dcd39 (4 samples, 0.22%)</title><rect x="122" y="245" width="2" height="15" fill="rgb(252,142,1)"/><text text-anchor="left" x="125.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::pack_row_b (4 samples, 0.22%)</title><rect x="122" y="229" width="2" height="15" fill="rgb(225,176,33)"/><text text-anchor="left" x="125.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::sse::SseKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::pack_row_b (4 samples, 0.22%)</title><rect x="122" y="213" width="2" height="15" fill="rgb(250,135,17)"/><text text-anchor="left" x="125.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::sse::l3s::sgemm_pb_x8 (4 samples, 0.22%)</title><rect x="122" y="197" width="2" height="15" fill="rgb(231,209,0)"/><text text-anchor="left" x="125.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::sse::_mm_set_ps (4 samples, 0.22%)</title><rect x="122" y="181" width="2" height="15" fill="rgb(220,228,20)"/><text text-anchor="left" x="125.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::inner_kernel::_$u7b$$u7b$closure$u7d$$u7d$::h490b03c94efd68cb (18 samples, 1.00%)</title><rect x="124" y="245" width="12" height="15" fill="rgb(229,109,41)"/><text text-anchor="left" x="127.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::pack_row_a (18 samples, 1.00%)</title><rect x="124" y="229" width="12" height="15" fill="rgb(249,86,43)"/><text text-anchor="left" x="127.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::avx::l3s::sgemm_pa_16x (18 samples, 1.00%)</title><rect x="124" y="213" width="12" height="15" fill="rgb(210,21,51)"/><text text-anchor="left" x="127.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_loadu_ps (18 samples, 1.00%)</title><rect x="124" y="197" width="12" height="15" fill="rgb(228,81,25)"/><text text-anchor="left" x="127.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (18 samples, 1.00%)</title><rect x="124" y="181" width="12" height="15" fill="rgb(244,133,54)"/><text text-anchor="left" x="127.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_add_ps (1 samples, 0.06%)</title><rect x="136" y="197" width="1" height="15" fill="rgb(249,94,26)"/><text text-anchor="left" x="139.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::inner_kernel::_$u7b$$u7b$closure$u7d$$u7d$::h9cd0403b01fb359b (2 samples, 0.11%)</title><rect x="136" y="245" width="2" height="15" fill="rgb(215,142,54)"/><text text-anchor="left" x="139.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernelSupMr&lt;f32,gemm::dim::A16&gt;&gt;::sup_bl (2 samples, 0.11%)</title><rect x="136" y="229" width="2" height="15" fill="rgb(238,193,14)"/><text text-anchor="left" x="139.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::avx::l3s::sgemm_sup_16x1 (2 samples, 0.11%)</title><rect x="136" y="213" width="2" height="15" fill="rgb(238,3,42)"/><text text-anchor="left" x="139.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::avx::fma::fmadd_ps (1 samples, 0.06%)</title><rect x="137" y="197" width="1" height="15" fill="rgb(237,106,31)"/><text text-anchor="left" x="140.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::fma::_mm256_fmadd_ps (1 samples, 0.06%)</title><rect x="137" y="181" width="1" height="15" fill="rgb(248,11,21)"/><text text-anchor="left" x="140.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.06%)</title><rect x="138" y="213" width="1" height="15" fill="rgb(235,94,45)"/><text text-anchor="left" x="141.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.06%)</title><rect x="138" y="197" width="1" height="15" fill="rgb(214,205,47)"/><text text-anchor="left" x="141.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.39%)</title><rect x="138" y="229" width="5" height="15" fill="rgb(241,141,0)"/><text text-anchor="left" x="141.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::nth (6 samples, 0.33%)</title><rect x="139" y="213" width="4" height="15" fill="rgb(216,191,41)"/><text text-anchor="left" x="142.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;usize as core::iter::range::Step&gt;::add_usize (2 samples, 0.11%)</title><rect x="141" y="197" width="2" height="15" fill="rgb(254,106,7)"/><text text-anchor="left" x="144.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.11%)</title><rect x="141" y="181" width="2" height="15" fill="rgb(254,42,38)"/><text text-anchor="left" x="144.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.11%)</title><rect x="141" y="165" width="2" height="15" fill="rgb(216,28,27)"/><text text-anchor="left" x="144.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 5.92%)</title><rect x="154" y="197" width="70" height="15" fill="rgb(247,149,52)"/><text text-anchor="left" x="157.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;core::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::nth (104 samples, 5.76%)</title><rect x="156" y="181" width="68" height="15" fill="rgb(240,21,54)"/><text text-anchor="left" x="159.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::i..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;usize as core::iter::range::Step&gt;::add_usize (18 samples, 1.00%)</title><rect x="212" y="165" width="12" height="15" fill="rgb(219,76,9)"/><text text-anchor="left" x="215.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 1.00%)</title><rect x="212" y="149" width="12" height="15" fill="rgb(233,175,0)"/><text text-anchor="left" x="215.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl usize&gt;::overflowing_add (18 samples, 1.00%)</title><rect x="212" y="133" width="12" height="15" fill="rgb(211,83,39)"/><text text-anchor="left" x="215.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::matrix::MutMatrix&lt;F&gt; as gemm::matrix::MatrixMut&lt;F&gt;&gt;::row_mut (1 samples, 0.06%)</title><rect x="224" y="197" width="0" height="15" fill="rgb(231,199,7)"/><text text-anchor="left" x="227.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::add (1 samples, 0.06%)</title><rect x="224" y="181" width="0" height="15" fill="rgb(247,209,44)"/><text text-anchor="left" x="227.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.06%)</title><rect x="224" y="165" width="0" height="15" fill="rgb(243,216,44)"/><text text-anchor="left" x="227.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_add_ps (75 samples, 4.15%)</title><rect x="224" y="197" width="49" height="15" fill="rgb(250,18,43)"/><text text-anchor="left" x="227.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_broadcast_ss (134 samples, 7.42%)</title><rect x="273" y="197" width="88" height="15" fill="rgb(251,67,7)"/><text text-anchor="left" x="276.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_set1_ps (134 samples, 7.42%)</title><rect x="273" y="181" width="88" height="15" fill="rgb(219,119,14)"/><text text-anchor="left" x="276.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_setr_ps (134 samples, 7.42%)</title><rect x="273" y="165" width="88" height="15" fill="rgb(236,118,8)"/><text text-anchor="left" x="276.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_load_ps (215 samples, 11.90%)</title><rect x="361" y="197" width="140" height="15" fill="rgb(210,156,18)"/><text text-anchor="left" x="364.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::core_arch::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx::_mm256_storeu_ps (22 samples, 1.22%)</title><rect x="501" y="197" width="15" height="15" fill="rgb(244,67,45)"/><text text-anchor="left" x="504.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.06%)</title><rect x="516" y="197" width="1" height="15" fill="rgb(241,147,12)"/><text text-anchor="left" x="519.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::main_tl (1,498 samples, 82.95%)</title><rect x="143" y="229" width="979" height="15" fill="rgb(208,49,39)"/><text text-anchor="left" x="146.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;gemm::kernel::avx::AvxKernel&lt;f32,I&gt; as gemm::kernel::GemmKernel&lt;f32,gemm::dim::A16,gemm::dim::A5&gt;&gt;::main_tl</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::avx::l3s::sgemm_ukr_16x5 (1,497 samples, 82.89%)</title><rect x="143" y="213" width="979" height="15" fill="rgb(216,112,15)"/><text text-anchor="left" x="146.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::kernel::avx::l3s::sgemm_ukr_16x5</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::kernel::avx::fma::fmadd_ps (926 samples, 51.27%)</title><rect x="517" y="197" width="605" height="15" fill="rgb(250,16,46)"/><text text-anchor="left" x="520.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::kernel::avx::fma::fmadd_ps</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::fma::_mm256_fmadd_ps (926 samples, 51.27%)</title><rect x="517" y="181" width="605" height="15" fill="rgb(233,162,19)"/><text text-anchor="left" x="520.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::core_arch::x86::fma::_mm256_fmadd_ps</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::matrix::MutMatrix&lt;F&gt; as gemm::matrix::Matrix&lt;F&gt;&gt;::sub (1 samples, 0.06%)</title><rect x="1122" y="229" width="0" height="15" fill="rgb(238,16,10)"/><text text-anchor="left" x="1125.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::matrix::MutMatrix&lt;F&gt; as gemm::matrix::MatrixMut&lt;F&gt;&gt;::index_mut (1 samples, 0.06%)</title><rect x="1122" y="213" width="0" height="15" fill="rgb(226,5,39)"/><text text-anchor="left" x="1125.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::add (1 samples, 0.06%)</title><rect x="1122" y="197" width="0" height="15" fill="rgb(205,75,35)"/><text text-anchor="left" x="1125.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.06%)</title><rect x="1122" y="181" width="0" height="15" fill="rgb(208,167,16)"/><text text-anchor="left" x="1125.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::matrix::MutMatrix&lt;F&gt; as gemm::matrix::Matrix&lt;F&gt;&gt;::sub_row (3 samples, 0.17%)</title><rect x="1122" y="229" width="2" height="15" fill="rgb(242,196,27)"/><text text-anchor="left" x="1125.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::matrix::MutMatrix&lt;F&gt; as gemm::matrix::MatrixMut&lt;F&gt;&gt;::row_mut (3 samples, 0.17%)</title><rect x="1122" y="213" width="2" height="15" fill="rgb(217,85,9)"/><text text-anchor="left" x="1125.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::sgemm::sgemm (1,536 samples, 85.05%)</title><rect x="121" y="325" width="1004" height="15" fill="rgb(234,208,0)"/><text text-anchor="left" x="124.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::sgemm::sgemm</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::gemm (1,536 samples, 85.05%)</title><rect x="121" y="309" width="1004" height="15" fill="rgb(241,41,51)"/><text text-anchor="left" x="124.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::gemm::gemm</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::gemm_template (1,536 samples, 85.05%)</title><rect x="121" y="293" width="1004" height="15" fill="rgb(253,199,54)"/><text text-anchor="left" x="124.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::gemm::gemm_template</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::inner_kernel (1,536 samples, 85.05%)</title><rect x="121" y="277" width="1004" height="15" fill="rgb(233,114,1)"/><text text-anchor="left" x="124.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::gemm::inner_kernel</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;gemm::executor::DefaultExecutor as gemm::executor::Executor&gt;::execute (1,536 samples, 85.05%)</title><rect x="121" y="261" width="1004" height="15" fill="rgb(237,17,30)"/><text text-anchor="left" x="124.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;gemm::executor::DefaultExecutor as gemm::executor::Executor&gt;::execute</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>gemm::gemm::inner_kernel::_$u7b$$u7b$closure$u7d$$u7d$::hd5df0591955beac6 (1,511 samples, 83.67%)</title><rect x="138" y="245" width="987" height="15" fill="rgb(238,223,39)"/><text text-anchor="left" x="141.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">gemm::gemm::inner_kernel::_$u7b$$u7b$closure$u7d$$u7d$::hd5df0591955beac6</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.06%)</title><rect x="1124" y="229" width="1" height="15" fill="rgb(214,169,10)"/><text text-anchor="left" x="1127.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.06%)</title><rect x="1124" y="213" width="1" height="15" fill="rgb(234,181,41)"/><text text-anchor="left" x="1127.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;f32 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (10 samples, 0.55%)</title><rect x="1135" y="293" width="6" height="15" fill="rgb(249,67,52)"/><text text-anchor="left" x="1138.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.11%)</title><rect x="1165" y="85" width="2" height="15" fill="rgb(225,70,53)"/><text text-anchor="left" x="1168.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.11%)</title><rect x="1165" y="69" width="2" height="15" fill="rgb(214,45,29)"/><text text-anchor="left" x="1168.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (2 samples, 0.11%)</title><rect x="1167" y="85" width="1" height="15" fill="rgb(231,103,45)"/><text text-anchor="left" x="1170.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.11%)</title><rect x="1167" y="69" width="1" height="15" fill="rgb(209,34,41)"/><text text-anchor="left" x="1170.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::ChaCha::pos64 (1 samples, 0.06%)</title><rect x="1168" y="85" width="1" height="15" fill="rgb(237,111,8)"/><text text-anchor="left" x="1171.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.06%)</title><rect x="1169" y="69" width="0" height="15" fill="rgb(226,20,42)"/><text text-anchor="left" x="1172.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.06%)</title><rect x="1169" y="53" width="0" height="15" fill="rgb(247,125,28)"/><text text-anchor="left" x="1172.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::diagonalize (2 samples, 0.11%)</title><rect x="1169" y="85" width="1" height="15" fill="rgb(232,111,12)"/><text text-anchor="left" x="1172.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.06%)</title><rect x="1169" y="69" width="1" height="15" fill="rgb(208,52,51)"/><text text-anchor="left" x="1172.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.06%)</title><rect x="1169" y="53" width="1" height="15" fill="rgb(216,224,10)"/><text text-anchor="left" x="1172.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.17%)</title><rect x="1170" y="69" width="2" height="15" fill="rgb(235,214,1)"/><text text-anchor="left" x="1173.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (3 samples, 0.17%)</title><rect x="1170" y="53" width="2" height="15" fill="rgb(232,127,24)"/><text text-anchor="left" x="1173.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.17%)</title><rect x="1170" y="37" width="2" height="15" fill="rgb(249,46,48)"/><text text-anchor="left" x="1173.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (3 samples, 0.17%)</title><rect x="1172" y="69" width="2" height="15" fill="rgb(226,151,39)"/><text text-anchor="left" x="1175.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.17%)</title><rect x="1172" y="53" width="2" height="15" fill="rgb(232,164,5)"/><text text-anchor="left" x="1175.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (4 samples, 0.22%)</title><rect x="1174" y="69" width="2" height="15" fill="rgb(233,154,33)"/><text text-anchor="left" x="1177.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.22%)</title><rect x="1174" y="53" width="2" height="15" fill="rgb(233,209,54)"/><text text-anchor="left" x="1177.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (7 samples, 0.39%)</title><rect x="1176" y="69" width="5" height="15" fill="rgb(207,171,6)"/><text text-anchor="left" x="1179.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_or_si256 (6 samples, 0.33%)</title><rect x="1177" y="53" width="4" height="15" fill="rgb(205,139,3)"/><text text-anchor="left" x="1180.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (3 samples, 0.17%)</title><rect x="1181" y="69" width="2" height="15" fill="rgb(218,168,49)"/><text text-anchor="left" x="1184.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.06%)</title><rect x="1182" y="53" width="1" height="15" fill="rgb(211,21,32)"/><text text-anchor="left" x="1185.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::round (27 samples, 1.50%)</title><rect x="1170" y="85" width="18" height="15" fill="rgb(249,109,41)"/><text text-anchor="left" x="1173.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (7 samples, 0.39%)</title><rect x="1183" y="69" width="5" height="15" fill="rgb(240,223,8)"/><text text-anchor="left" x="1186.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_or_si256 (5 samples, 0.28%)</title><rect x="1184" y="53" width="4" height="15" fill="rgb(211,5,45)"/><text text-anchor="left" x="1187.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (37 samples, 2.05%)</title><rect x="1164" y="181" width="24" height="15" fill="rgb(229,51,1)"/><text text-anchor="left" x="1167.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::ChaCha::refill4 (37 samples, 2.05%)</title><rect x="1164" y="165" width="24" height="15" fill="rgb(212,160,27)"/><text text-anchor="left" x="1167.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::refill_wide (36 samples, 1.99%)</title><rect x="1165" y="149" width="23" height="15" fill="rgb(238,57,51)"/><text text-anchor="left" x="1168.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::refill_wide::impl_avx2 (36 samples, 1.99%)</title><rect x="1165" y="133" width="23" height="15" fill="rgb(246,153,36)"/><text text-anchor="left" x="1168.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::refill_wide::fn_impl (36 samples, 1.99%)</title><rect x="1165" y="117" width="23" height="15" fill="rgb(220,34,40)"/><text text-anchor="left" x="1168.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::refill_wide_impl (36 samples, 1.99%)</title><rect x="1165" y="101" width="23" height="15" fill="rgb(221,74,0)"/><text text-anchor="left" x="1168.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>c2_chacha::guts::undiagonalize (1 samples, 0.06%)</title><rect x="1188" y="85" width="0" height="15" fill="rgb(205,84,10)"/><text text-anchor="left" x="1191.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.06%)</title><rect x="1188" y="69" width="0" height="15" fill="rgb(225,7,6)"/><text text-anchor="left" x="1191.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.06%)</title><rect x="1188" y="53" width="0" height="15" fill="rgb(219,75,6)"/><text text-anchor="left" x="1191.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (1,790 samples, 99.11%)</title><rect x="19" y="485" width="1170" height="15" fill="rgb(222,167,51)"/><text text-anchor="left" x="22.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_start_main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (1,790 samples, 99.11%)</title><rect x="19" y="469" width="1170" height="15" fill="rgb(232,175,52)"/><text text-anchor="left" x="22.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal (1,790 samples, 99.11%)</title><rect x="19" y="453" width="1170" height="15" fill="rgb(208,35,36)"/><text text-anchor="left" x="22.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (1,790 samples, 99.11%)</title><rect x="19" y="437" width="1170" height="15" fill="rgb(234,101,47)"/><text text-anchor="left" x="22.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (1,790 samples, 99.11%)</title><rect x="19" y="421" width="1170" height="15" fill="rgb(241,72,21)"/><text text-anchor="left" x="22.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (1,790 samples, 99.11%)</title><rect x="19" y="405" width="1170" height="15" fill="rgb(242,156,4)"/><text text-anchor="left" x="22.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (1,790 samples, 99.11%)</title><rect x="19" y="389" width="1170" height="15" fill="rgb(220,193,9)"/><text text-anchor="left" x="22.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::ha04574f12d97cbe2 (1,790 samples, 99.11%)</title><rect x="19" y="373" width="1170" height="15" fill="rgb(243,205,6)"/><text text-anchor="left" x="22.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::ha04574f12d97cbe2</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h44a3d63b5d955c09 (1,790 samples, 99.11%)</title><rect x="19" y="357" width="1170" height="15" fill="rgb(248,210,2)"/><text text-anchor="left" x="22.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h44a3d63b5d955c09</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>demo::main (1,790 samples, 99.11%)</title><rect x="19" y="341" width="1170" height="15" fill="rgb(219,112,32)"/><text text-anchor="left" x="22.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">demo::main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::Rng::gen (98 samples, 5.43%)</title><rect x="1125" y="325" width="64" height="15" fill="rgb(241,21,53)"/><text text-anchor="left" x="1128.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">rand::R..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f32&gt; for rand::distributions::Standard&gt;::sample (98 samples, 5.43%)</title><rect x="1125" y="309" width="64" height="15" fill="rgb(231,134,21)"/><text text-anchor="left" x="1128.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">rand::d..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::Rng::gen (73 samples, 4.04%)</title><rect x="1141" y="293" width="48" height="15" fill="rgb(211,212,51)"/><text text-anchor="left" x="1144.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">rand..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (73 samples, 4.04%)</title><rect x="1141" y="277" width="48" height="15" fill="rgb(239,172,21)"/><text text-anchor="left" x="1144.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">rand..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (73 samples, 4.04%)</title><rect x="1141" y="261" width="48" height="15" fill="rgb(220,87,17)"/><text text-anchor="left" x="1144.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;ran..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (73 samples, 4.04%)</title><rect x="1141" y="245" width="48" height="15" fill="rgb(206,20,52)"/><text text-anchor="left" x="1144.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;ran..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (73 samples, 4.04%)</title><rect x="1141" y="229" width="48" height="15" fill="rgb(252,109,54)"/><text text-anchor="left" x="1144.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;ran..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (38 samples, 2.10%)</title><rect x="1164" y="213" width="25" height="15" fill="rgb(236,168,24)"/><text text-anchor="left" x="1167.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">r..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (38 samples, 2.10%)</title><rect x="1164" y="197" width="25" height="15" fill="rgb(241,35,17)"/><text text-anchor="left" x="1167.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (1 samples, 0.06%)</title><rect x="1188" y="181" width="1" height="15" fill="rgb(246,211,48)"/><text text-anchor="left" x="1191.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (1 samples, 0.06%)</title><rect x="1188" y="165" width="1" height="15" fill="rgb(251,144,0)"/><text text-anchor="left" x="1191.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>rand_core::SeedableRng::from_rng (1 samples, 0.06%)</title><rect x="1188" y="149" width="1" height="15" fill="rgb(238,58,22)"/><text text-anchor="left" x="1191.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.06%)</title><rect x="1188" y="133" width="1" height="15" fill="rgb(221,147,5)"/><text text-anchor="left" x="1191.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.06%)</title><rect x="1188" y="117" width="1" height="15" fill="rgb(218,131,4)"/><text text-anchor="left" x="1191.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>getrandom::imp::getrandom_inner (1 samples, 0.06%)</title><rect x="1188" y="101" width="1" height="15" fill="rgb(218,15,36)"/><text text-anchor="left" x="1191.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.06%)</title><rect x="1188" y="85" width="1" height="15" fill="rgb(250,53,53)"/><text text-anchor="left" x="1191.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>getrandom::imp::getrandom_inner::_$u7b$$u7b$closure$u7d$$u7d$::h70ebdfa92db675b2 (1 samples, 0.06%)</title><rect x="1188" y="69" width="1" height="15" fill="rgb(246,209,29)"/><text text-anchor="left" x="1191.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>getrandom::imp::getrandom (1 samples, 0.06%)</title><rect x="1188" y="53" width="1" height="15" fill="rgb(240,13,26)"/><text text-anchor="left" x="1191.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall (1 samples, 0.06%)</title><rect x="1188" y="37" width="1" height="15" fill="rgb(220,110,47)"/><text text-anchor="left" x="1191.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (1,806 samples, 100%)</title><rect x="10" y="533" width="1180" height="15" fill="rgb(246,102,13)"/><text text-anchor="left" x="13.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>demo (1,806 samples, 100.00%)</title><rect x="10" y="517" width="1180" height="15" fill="rgb(214,110,7)"/><text text-anchor="left" x="13.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">demo</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (1,795 samples, 99.39%)</title><rect x="17" y="501" width="1173" height="15" fill="rgb(219,35,24)"/><text text-anchor="left" x="20.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 0.06%)</title><rect x="1189" y="485" width="1" height="15" fill="rgb(226,179,15)"/><text text-anchor="left" x="1192.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>